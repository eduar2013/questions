Given:
class Vehicle{
	String type = "4W";
	int maxSpeed = 100;
	
	Vehicle(String type, int maxSpeed){
		this.type = type;
		this.maxSpeed = maxSpeed;
	}
}

class Car extends Vehicle{
	String trans;
	
	Car(String trans){        //line n1
		this.trans = trans;
	}
	
	Car(String type, int maxSpeed, String trans){
		super(type,maxSpeed);
		this(trans);		  //line n2;
	}	
}

And given the code fragment:
	7. Car c1 = new Car("Auto");
	8. Car c2 = new Car("4W",150,"Manual");
	9. System.out.println(c1.type + " " + c1.maxSpeed + " " + c1.trans);
   10. System.out.println(c2.type + " " + c2.maxSpeed + " " + c2.trans);

What is the result?
--options--
A.| 4W 100 Auto 4W 150 Manual
B.| Null 0 Auto 4W 150 Manual
C.| Compilation fails only at line n1
D.| Compilation fails only at line n2
*E.| Compilation fails at both line n1 and line n2
--objective--
Java Object-Oriented Approach:Initialize objects and their members using instance and static initialiser statements and constructors